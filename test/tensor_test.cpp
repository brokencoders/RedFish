#include <gtest/gtest.h>

#include <chrono>
#include "Tensor.h"

using namespace std;
using namespace RedFish;

TEST(TensorTest, AreEqualTest)
{
    Tensor t1({5, 5, 5});
    Tensor t2({5, 5, 5});
    t1.ones();
    t2.ones();
    EXPECT_TRUE(debug(t1, t2, 1e-4));
    
    Tensor t3({5, 5, 5});
    Tensor t4({5, 5, 5});
    
    t3.randUniform();
    t4.randUniform();
    EXPECT_FALSE(debug(t3, t4, .0001));
}

TEST(TensorTest, StackTest)
{

    Tensor t1({3, 3});
    Tensor t2({3, 3});
    t1.ones();
    t2.ones();

    Tensor t3({ 3, 6});
    t3.ones();
    EXPECT_TRUE(debug(t3, stack(t1, t2, 0), 1e-4));

    Tensor t4({ 6, 3});
    t4.ones();
    EXPECT_TRUE(debug(t4, stack(t1, t2, 1), 1e-4));
}

TEST(TensorTest, Matmul)
{
    Tensor t1 ({30, 15},{ 0.8701, 0.6546, 0.2928, 0.6633, 0.4755, 0.1611, 0.8129, 0.7492, 0.6136, 0.3715, 0.0476, 0.5184, 0.0983, 0.0525, 0.5776, 0.7072, 0.7625, 0.8132, 0.2232, 0.2235, 0.0336, 0.9838, 0.3453, 0.6655, 0.7951, 0.6022, 0.1454, 0.3983, 0.6486, 0.0851, 0.9575, 0.7490, 0.8366, 0.4583, 0.6988, 0.2320, 0.7040, 0.6503, 0.3721, 0.8938, 0.4844, 0.0440, 0.8132, 0.8194, 0.6578, 0.1768, 0.6984, 0.7460, 0.9144, 0.3779, 0.5831, 0.6071, 0.5636, 0.5055, 0.9248, 0.5849, 0.8416, 0.4093, 0.6562, 0.8106, 0.5529, 0.6762, 0.1052, 0.3961, 0.2549, 0.1768, 0.6176, 0.3720, 0.4424, 0.1304, 0.6828, 0.3358, 0.6703, 0.3396, 0.8453, 0.9510, 0.5026, 0.1551, 0.1416, 0.9901, 0.6772, 0.7899, 0.7971, 0.5839, 0.5491, 0.0540, 0.3608, 0.7862, 0.5319, 0.3330, 0.2459, 0.4032, 0.9142, 0.4127, 0.2177, 0.7063, 0.3812, 0.1862, 0.1026, 0.3704, 0.7578, 0.3215, 0.8309, 0.5765, 0.8682, 0.3449, 0.5484, 0.3434, 0.7280, 0.0333, 0.0299, 0.0522, 0.1332, 0.3675, 0.0492, 0.2033, 0.7100, 0.9346, 0.4811, 0.7114, 0.2452, 0.6425, 0.1996, 0.8769, 0.3043, 0.1221, 0.6135, 0.7244, 0.6264, 0.5978, 0.2928, 0.6336, 0.7480, 0.9579, 0.5972, 0.2357, 0.8653, 0.1905, 0.8541, 0.8932, 0.9113, 0.7708, 0.8072, 0.5023, 0.4592, 0.7479, 0.1114, 0.5580, 0.8322, 0.6682, 0.8676, 0.1631, 0.6614, 0.0353, 0.1057, 0.7808, 0.4401, 0.6278, 0.0562, 0.7471, 0.8530, 0.3578, 0.2328, 0.8197, 0.5526, 0.7600, 0.4266, 0.5222, 0.7245, 0.2930, 0.2869, 0.5462, 0.5989, 0.3945, 0.8184, 0.4748, 0.7835, 0.5889, 0.0150, 0.8542, 0.3812, 0.4716, 0.0983, 0.2235, 0.5664, 0.1226, 0.6176, 0.7886, 0.6608, 0.0382, 0.5206, 0.5832, 0.6320, 0.4375, 0.4241, 0.2975, 0.0190, 0.2778, 0.2734, 0.7886, 0.9262, 0.7201, 0.8467, 0.2381, 0.6777, 0.1152, 0.8249, 0.0772, 0.2137, 0.6882, 0.3275, 0.9473, 0.9062, 0.9497, 0.5968, 0.7270, 0.5036, 0.1775, 0.1627, 0.9588, 0.1352, 0.5375, 0.3775, 0.8899, 0.5232, 0.4812, 0.1307, 0.6477, 0.1144, 0.7499, 0.7275, 0.4750, 0.6083, 0.8201, 0.5361, 0.6038, 0.2720, 0.6110, 0.1513, 0.2975, 0.8587, 0.5947, 0.3053, 0.2273, 0.4170, 0.9505, 0.3592, 0.4635, 0.4156, 0.1457, 0.6191, 0.7673, 0.3325, 0.1437, 0.1024, 0.9864, 0.8933, 0.5748, 0.9526, 0.3931, 0.0163, 0.2221, 0.8250, 0.7934, 0.8692, 0.4622, 0.1449, 0.2826, 0.0905, 0.9571, 0.5314, 0.0446, 0.9908, 0.8750, 0.1284, 0.5121, 0.3893, 0.5907, 0.8649, 0.4562, 0.3676, 0.1713, 0.4385, 0.4105, 0.8217, 0.4538, 0.6046, 0.9911, 0.0554, 0.9706, 0.2620, 0.1376, 0.8807, 0.9750, 0.7978, 0.6449, 0.5035, 0.1328, 0.7367, 0.5899, 0.7300, 0.7144, 0.2359, 0.1488, 0.1001, 0.0836, 0.7259, 0.6263, 0.6062, 0.9779, 0.8719, 0.0701, 0.7341, 0.2571, 0.5364, 0.2483, 0.7876, 0.5037, 0.4931, 0.3132, 0.9971, 0.4383, 0.9918, 0.3541, 0.1037, 0.8545, 0.7175, 0.6928, 0.3355, 0.1363, 0.9082, 0.5321, 0.9113, 0.5809, 0.9533, 0.0961, 0.7803, 0.1026, 0.4574, 0.5150, 0.4523, 0.8461, 0.1115, 0.0765, 0.8775, 0.2821, 0.1186, 0.6250, 0.0203, 0.3855, 0.4910, 0.5422, 0.0162, 0.9984, 0.0016, 0.3650, 0.6441, 0.9582, 0.2399, 0.9127, 0.3773, 0.8999, 0.9822, 0.1748, 0.1571, 0.6667, 0.3128, 0.4492, 0.3157, 0.5451, 0.4033, 0.3270, 0.1482, 0.5149, 0.6480, 0.7141, 0.6001, 0.9950, 0.1583, 0.8690, 0.5006, 0.3756, 0.7778, 0.5060, 0.9626, 0.1986, 0.3056, 0.0692, 0.4138, 0.2564, 0.5552, 0.4375, 0.8324, 0.5091, 0.1640, 0.3272, 0.3132, 0.4555, 0.4331, 0.8747, 0.1189, 0.3927, 0.9266, 0.1054, 0.9740, 0.3606, 0.7631, 0.5061, 0.6506, 0.0407, 0.5713, 0.0582, 0.7247, 0.7752, 0.8518, 0.7292, 0.4114, 0.4808, 0.8611, 0.1411, 0.0250, 0.4722, 0.3974, 0.8727, 0.7594, 0.5983, 0.0919, 0.8512, 0.5955, 0.6614, 0.0278, 0.3065, 0.8303, 0.8807, 0.0968, 0.7555, 0.6445, 0.0828, 0.0286, 0.7428, 0.4195, 0.7536, 0.2603, 0.5695, 0.2840, 0.7944, 0.2681, 0.0555, 0.1264, 0.5294});
    Tensor t2 ({15, 30}, { 2.2680e-01, 4.8146e-03, 1.6305e-02, 8.9016e-01, 6.7052e-01, 3.1090e-01,2.3222e-01, 6.9689e-01, 1.4042e-01, 5.6021e-01, 7.3143e-01, 5.2084e-01,6.6674e-01, 3.8569e-01, 7.7027e-01, 9.0032e-01, 1.5162e-01, 7.6181e-01,8.1573e-01, 9.2963e-01, 3.1168e-02, 5.7998e-01, 7.1676e-01, 4.0544e-01,2.5297e-01, 7.7153e-01, 2.8202e-01, 5.4946e-01, 5.5275e-01, 8.0708e-01,5.3595e-01, 7.5630e-02, 3.5185e-01, 2.5748e-01, 3.7172e-02, 8.1970e-01,9.6083e-01, 3.3314e-01, 3.1323e-01, 6.4571e-01, 1.5812e-01, 2.1973e-01,4.7624e-01, 1.0963e-01, 2.9834e-01, 7.7402e-01, 6.9585e-01, 8.7970e-01,6.2028e-01, 5.1259e-02, 1.5470e-01, 3.9345e-01, 2.1419e-02, 8.5795e-01,6.9841e-01, 5.5895e-01, 8.6786e-01, 9.6255e-01, 2.7595e-01, 7.3818e-01,6.7270e-01, 5.4863e-01, 8.0739e-01, 6.3858e-01, 3.5740e-01, 3.5504e-01,1.4401e-01, 3.8339e-01, 3.7308e-01, 5.0367e-02, 7.5504e-01, 7.2348e-01,9.1849e-01, 1.4578e-01, 6.5292e-02, 1.7437e-01, 8.2340e-01, 6.2550e-02,4.2814e-01, 5.7553e-01, 4.6332e-01, 6.4164e-01, 4.2188e-01, 6.7349e-01,2.4719e-01, 3.3982e-01, 5.7981e-01, 8.4832e-01, 2.7990e-01, 5.4758e-01,9.3998e-01, 2.9803e-01, 7.4385e-01, 7.3886e-01, 6.9865e-01, 7.3152e-01,4.1070e-01, 7.3211e-01, 3.8450e-01, 3.4130e-01, 2.7922e-01, 9.0379e-01,9.1208e-01, 1.7208e-01, 1.4728e-01, 5.8873e-01, 1.0563e-01, 5.6939e-01,6.0565e-01, 1.1877e-01, 7.7660e-01, 7.9800e-01, 3.5162e-01, 3.0898e-01,7.1983e-01, 6.6415e-01, 6.1805e-01, 6.2748e-01, 5.5756e-01, 2.5130e-01,8.2879e-01, 1.4665e-01, 8.0746e-01, 4.9658e-02, 7.9003e-01, 8.8052e-01,6.5071e-01, 4.4246e-01, 8.1266e-01, 9.6485e-02, 8.7161e-01, 5.7860e-01,5.9357e-01, 8.1813e-01, 9.9878e-01, 8.6724e-01, 6.2786e-01, 5.4606e-01,8.9495e-01, 1.1358e-01, 5.8167e-01, 5.4427e-02, 4.3489e-01, 4.9322e-02,7.2809e-01, 2.6652e-01, 3.1347e-01, 8.9026e-01, 4.1935e-01, 3.1911e-01,4.9319e-01, 1.0276e-02, 7.6761e-01, 4.4362e-02, 5.9025e-01, 7.7799e-01,4.4840e-01, 8.1756e-02, 3.8893e-01, 2.7705e-01, 7.8662e-01, 4.4908e-01,6.3160e-01, 5.4683e-01, 2.4382e-01, 1.2845e-01, 2.5183e-01, 4.5930e-01,3.7334e-01, 3.6668e-01, 5.0408e-01, 8.9215e-02, 1.0069e-01, 8.2767e-01,6.0409e-02, 5.4860e-01, 2.2165e-01, 4.9941e-01, 5.9660e-01, 8.3836e-01,9.5186e-01, 8.7045e-01, 3.1939e-01, 3.0012e-02, 8.6534e-01, 3.5903e-01,1.5171e-01, 8.8552e-01, 9.0976e-01, 5.8507e-01, 9.6169e-01, 6.4135e-01,8.6364e-01, 7.2610e-01, 2.9704e-01, 5.2315e-01, 4.1108e-01, 4.1833e-01,9.8725e-01, 3.4078e-01, 8.5430e-01, 1.3416e-01, 5.2657e-01, 9.5758e-01,3.8704e-01, 3.2802e-01, 2.9342e-01, 2.7169e-01, 4.3959e-01, 9.1363e-02,5.2885e-01, 7.6481e-01, 6.9975e-01, 8.8036e-01, 8.8316e-01, 5.0554e-01,7.7486e-01, 7.9402e-01, 4.7901e-01, 6.6689e-01, 4.6899e-01, 2.5264e-01,9.3237e-01, 9.5025e-01, 9.8621e-02, 8.8771e-01, 9.0565e-01, 4.0051e-01,1.6115e-02, 1.1699e-01, 7.4860e-01, 6.7732e-01, 3.8872e-03, 4.4695e-01,8.0285e-01, 6.6966e-01, 2.0924e-01, 4.8523e-01, 9.5902e-01, 8.3840e-01,1.8523e-01, 2.9132e-01, 6.1309e-01, 8.7789e-01, 1.6928e-01, 6.1780e-01,9.2100e-01, 4.0790e-01, 1.0855e-01, 2.5400e-01, 8.3930e-01, 2.0516e-01,1.3016e-01, 4.2230e-01, 8.0228e-05, 5.5340e-01, 1.1130e-01, 1.3826e-01,7.8863e-01, 6.3573e-02, 9.0210e-01, 8.7415e-01, 9.6524e-01, 9.9462e-01,2.1991e-01, 3.0537e-01, 2.3267e-01, 3.9310e-02, 6.6108e-02, 7.6894e-01,3.2183e-01, 9.9951e-01, 8.2079e-01, 5.6833e-01, 9.0163e-01, 4.9598e-01,4.9875e-01, 5.2504e-01, 8.0964e-01, 1.5531e-01, 1.9266e-01, 3.9917e-01,6.2441e-01, 8.0108e-01, 9.1512e-01, 1.8095e-01, 8.6198e-01, 6.1989e-01,2.7133e-01, 9.7730e-01, 9.1193e-01, 9.9510e-02, 8.0955e-01, 8.5554e-01,7.5140e-01, 1.2450e-01, 2.4061e-01, 9.3710e-01, 5.3535e-01, 8.8793e-01,6.1060e-01, 6.1900e-01, 6.7611e-01, 5.8295e-01, 2.3681e-01, 1.4703e-01,7.1715e-02, 7.0999e-01, 3.0449e-01, 7.2884e-01, 5.1401e-01, 6.7369e-02,5.2040e-01, 1.3754e-01, 9.2452e-01, 7.6372e-01, 1.5166e-01, 1.3927e-01,8.1968e-01, 7.5332e-01, 4.6299e-01, 4.1679e-01, 6.6766e-01, 1.9516e-01,6.0681e-01, 8.7561e-01, 1.6359e-01, 9.0477e-01, 7.3902e-01, 8.3546e-01,4.2986e-01, 9.8786e-02, 8.3795e-01, 6.2647e-01, 5.1539e-02, 8.9145e-01,1.9919e-01, 8.7005e-01, 4.8475e-01, 1.4628e-01, 4.1876e-01, 4.2211e-01,5.3971e-01, 5.9206e-01, 5.3154e-02, 1.7678e-01, 5.3262e-01, 9.2522e-01,6.7710e-01, 8.8718e-02, 9.8371e-02, 4.9925e-01, 8.5791e-01, 6.0494e-01,7.6888e-01, 5.6924e-01, 5.1587e-01, 1.9270e-01, 3.2544e-01, 5.7135e-02,4.1738e-01, 9.1433e-01, 6.0030e-01, 4.8738e-01, 1.5846e-01, 2.1369e-01,7.0675e-01, 7.1714e-01, 7.7190e-01, 3.5969e-01, 5.8613e-01, 2.4648e-01,2.2460e-01, 3.3964e-01, 8.7685e-01, 4.7914e-01, 7.1712e-01, 9.2142e-01,8.3182e-01, 2.5743e-01, 7.0333e-01, 6.5647e-01, 2.6146e-01, 7.4779e-01,1.1513e-01, 3.1256e-01, 8.0417e-01, 9.7429e-01, 8.5165e-01, 6.5929e-02,3.1472e-01, 5.7811e-02, 8.3726e-01, 7.3893e-01, 4.5465e-01, 4.5470e-01,1.2581e-01, 9.0863e-01, 2.9641e-01, 7.9400e-01, 9.0893e-01, 1.8339e-01,7.9501e-01, 5.6102e-01, 9.6075e-01, 3.1781e-01, 9.5640e-01, 2.7025e-01,1.3397e-01, 5.3752e-01, 4.7137e-01, 8.7589e-01, 3.6366e-01, 1.3423e-01,4.4375e-01, 9.6849e-01, 3.7310e-01, 8.3595e-01, 7.1531e-01, 4.4958e-01,7.0825e-01, 8.5770e-01, 3.9954e-01, 2.3795e-01, 9.9344e-01, 9.5731e-01,4.0827e-01, 8.0947e-01, 7.2658e-01, 3.4894e-01, 7.6659e-01, 9.5851e-01,8.1209e-01, 3.4713e-01, 7.9367e-01, 6.4036e-01, 6.6714e-01, 3.7860e-01,8.4720e-01, 7.1766e-01, 8.6304e-01, 2.7437e-01, 3.1988e-01, 7.0804e-01,3.3869e-02, 7.5603e-01, 1.6459e-02, 5.2947e-02, 8.4257e-02, 3.8094e-01});
    Tensor expected_result({30, 30}, {3.9638, 2.9829, 3.7471, 3.6612, 4.1016, 4.2411, 3.4001, 4.4763, 3.3832,2.8196, 4.1966, 3.5501, 4.6995, 3.4769, 2.8184, 4.2234, 3.4282, 3.7333,4.4960, 2.5193, 3.9499, 3.2571, 3.2474, 4.3270, 3.3948, 3.6493, 2.5888,3.5463, 3.0979, 3.6228,3.8869, 3.5778, 4.2703, 4.0281, 3.7241, 3.5329, 3.1625, 4.6560, 3.5139,3.2831, 4.6139, 3.0432, 4.7599, 3.3727, 3.7480, 3.9688, 4.0880, 3.4527,4.5456, 3.4026, 4.2140, 3.6285, 3.7449, 4.6857, 3.4535, 3.7577, 2.9925,4.8820, 3.6032, 4.1934,5.0541, 4.5329, 5.4807, 4.8595, 5.3023, 4.8808, 4.1984, 5.9044, 4.7488,3.9613, 5.8296, 4.2725, 6.2077, 4.4099, 5.4014, 5.2555, 5.4935, 4.6781,5.6052, 4.3327, 5.4061, 4.4162, 4.0818, 5.3668, 4.1800, 4.9451, 3.6755,6.3001, 4.7996, 5.0854,5.3142, 4.3807, 6.1609, 4.7631, 4.9857, 5.6197, 4.0705, 5.8966, 4.7189,3.6013, 5.4080, 4.4897, 6.2859, 4.3370, 4.3481, 4.5551, 5.2201, 4.6350,5.4290, 3.7588, 5.5735, 4.3852, 4.2770, 5.6758, 4.5469, 5.0219, 3.6547,5.6103, 4.4438, 4.8115,3.6844, 3.1634, 3.5713, 3.2423, 3.3507, 3.6697, 3.0330, 4.4097, 3.2534,3.0549, 4.0686, 2.9559, 4.0743, 2.7736, 3.5640, 3.9895, 3.2916, 3.4531,4.5558, 2.6655, 3.7499, 3.1561, 2.8955, 3.9474, 2.7815, 3.8378, 2.5256,3.7597, 3.1810, 3.2650,4.2549, 3.4425, 4.7502, 3.9220, 4.7028, 4.6430, 4.1156, 5.0146, 4.2776,3.3374, 5.4352, 3.5364, 5.0975, 4.5688, 4.4172, 4.7087, 4.5088, 4.5152,5.0768, 3.1130, 4.6572, 3.5632, 3.5848, 4.8615, 3.6284, 4.1018, 3.0401,4.9321, 4.2857, 4.3034,4.1471, 3.6082, 4.6379, 3.4102, 3.6817, 3.9215, 2.8179, 4.4743, 3.6889,2.8913, 4.6065, 3.4841, 4.8126, 2.9030, 3.9796, 3.4767, 4.0974, 3.4085,4.4541, 3.3746, 4.1800, 3.3608, 2.9682, 4.3072, 2.7538, 4.0934, 2.8804,4.7343, 3.6548, 3.6568,3.0086, 2.4458, 3.4233, 3.2214, 2.3547, 3.3637, 2.6322, 3.8780, 2.6450,2.2634, 3.2169, 2.7153, 3.4162, 2.0538, 2.7453, 2.9511, 3.0615, 3.3154,3.6992, 1.9783, 3.0373, 3.3143, 2.4916, 3.3464, 2.3647, 3.3009, 2.7222,3.3207, 2.6585, 2.2919,4.4341, 3.8298, 5.1789, 4.5074, 4.2496, 4.7230, 3.8855, 5.5851, 4.0906,3.5628, 4.7910, 3.5999, 5.2791, 3.9520, 4.0116, 4.3483, 4.6890, 4.2911,4.7319, 2.8898, 4.9865, 4.3624, 3.6150, 4.7688, 4.0224, 4.5286, 3.3714,4.8556, 4.1790, 3.8654,5.5118, 4.0648, 5.9116, 4.2573, 5.2909, 5.5399, 4.5359, 5.7150, 4.7426,4.1747, 5.8435, 4.1613, 6.1781, 4.5534, 4.9375, 5.3411, 4.9894, 4.5443,5.5923, 3.3917, 5.7249, 4.1916, 3.5710, 5.2351, 4.4287, 5.2432, 3.5101,5.9341, 4.9245, 5.0347,3.6578, 3.3372, 4.4673, 3.9145, 4.1905, 3.6410, 2.4900, 4.6282, 3.3922,3.2710, 4.6780, 3.1063, 5.0806, 3.5666, 4.1754, 3.6297, 4.0955, 3.2837,3.9041, 4.0266, 3.8762, 3.2595, 3.3468, 4.0548, 3.0964, 4.3751, 2.2772,4.6094, 4.0167, 4.4805,4.4729, 4.0939, 4.7718, 4.3065, 4.5269, 4.6497, 3.5538, 5.2515, 4.1567,3.0113, 4.5817, 4.0591, 5.3057, 3.7594, 3.8757, 4.3418, 4.1869, 4.3826,5.1336, 3.5344, 4.6818, 3.6917, 3.9403, 4.9987, 3.7593, 4.2276, 3.0399,4.5634, 3.8508, 4.1248,3.5554, 2.9606, 3.9106, 3.4379, 3.2352, 3.6816, 3.2319, 4.4184, 3.2410,2.9364, 4.2109, 2.6280, 3.9849, 3.3136, 3.1889, 3.9738, 3.4957, 3.3667,4.2528, 2.0992, 3.7593, 3.3109, 2.9670, 3.7437, 3.1225, 3.6247, 2.4902,3.6521, 3.3570, 3.1772,4.0391, 3.2090, 4.5809, 3.0338, 4.5452, 4.5162, 3.0257, 4.3140, 3.9507,2.4129, 4.5143, 3.5483, 4.8817, 4.2161, 3.1938, 3.4569, 3.8935, 3.5345,4.0156, 2.7096, 4.2441, 2.5342, 3.1268, 4.1938, 3.3354, 3.5165, 2.0873,3.5579, 3.4204, 3.5703,4.9712, 3.5105, 5.7110, 4.1185, 4.6713, 5.3177, 3.7722, 5.1332, 4.3879,3.2293, 5.0455, 4.3421, 5.9794, 3.9286, 4.3066, 4.0378, 5.1031, 4.5412,4.8633, 3.5620, 4.8640, 3.9203, 3.6442, 5.1479, 4.1756, 4.5317, 3.7722,5.8440, 4.1023, 4.4376,3.8000, 3.3958, 4.5946, 3.6069, 3.8495, 3.8627, 3.4276, 4.1037, 3.5815,2.5983, 4.8013, 3.0715, 4.3660, 3.6639, 3.5769, 3.8384, 3.6807, 3.2712,4.4936, 2.9326, 4.3811, 3.1918, 3.4851, 4.3893, 3.0239, 3.4657, 2.4699,4.3375, 3.6175, 4.1192,3.4222, 2.1483, 3.9410, 3.3440, 3.0841, 3.8376, 2.9669, 3.8334, 2.8627,2.7420, 4.1105, 2.7353, 4.0872, 3.1029, 2.9503, 3.6389, 3.0066, 3.6539,4.2048, 2.5436, 3.0722, 2.9701, 3.0676, 3.9561, 3.0158, 3.7549, 2.5711,3.9246, 3.4026, 3.8432,4.5616, 4.0385, 4.7427, 4.9151, 4.8782, 4.9316, 4.3255, 5.2236, 3.8632,3.4081, 4.6318, 4.1781, 5.5619, 3.6615, 4.0728, 5.1840, 4.3470, 4.2553,5.1687, 3.6987, 5.0232, 4.2363, 3.9116, 5.0738, 4.0612, 4.5646, 3.1609,4.9993, 3.8396, 5.0608,4.1748, 3.7070, 4.7418, 4.3773, 4.3118, 4.1779, 3.2800, 4.6731, 3.4508,2.8050, 4.8889, 3.9251, 5.1437, 3.2811, 3.2408, 3.8450, 3.8163, 3.1473,4.4544, 3.2909, 4.8641, 4.0778, 3.5455, 4.6492, 2.9380, 4.0874, 2.6743,4.1281, 3.5335, 4.1390,4.4288, 3.7469, 5.7493, 4.8229, 4.5431, 5.0519, 4.1739, 5.1648, 4.0235,3.3013, 5.5028, 3.6340, 5.5599, 4.3703, 4.4094, 4.7521, 5.1965, 3.7615,4.8834, 3.6118, 4.9883, 4.2185, 4.2409, 4.8759, 4.2592, 4.5483, 3.0239,5.4094, 4.0161, 5.2398,3.7501, 4.2045, 4.0723, 3.9917, 3.9746, 3.5731, 3.5417, 4.7723, 3.7354,3.4150, 4.2613, 2.9069, 4.4884, 3.4503, 4.2317, 4.3398, 3.9774, 3.7569,4.6823, 3.6008, 4.4972, 3.3889, 3.6031, 4.7783, 3.3786, 3.8658, 2.6987,4.7153, 3.8463, 4.4117,4.3942, 3.2566, 5.1392, 3.9912, 3.6018, 4.4391, 3.7448, 4.7270, 3.6388,3.4625, 4.6404, 3.1105, 5.0476, 3.6482, 3.2766, 4.2406, 4.1278, 4.0805,4.5369, 2.5739, 4.1907, 3.8274, 3.0105, 4.6730, 3.8056, 4.4910, 3.3074,4.9934, 4.4258, 4.3566,4.8672, 3.4867, 4.7339, 3.9295, 4.5526, 4.9706, 3.2790, 5.1609, 4.1894,2.7967, 5.1812, 4.4650, 5.4935, 3.6922, 4.0230, 4.5497, 4.1087, 4.1638,5.7644, 3.5342, 4.3770, 3.4620, 4.3105, 4.7481, 3.8181, 4.1789, 3.0493,4.5992, 3.2655, 3.9241,3.4604, 3.1600, 3.9793, 3.1223, 2.9667, 3.7790, 2.9984, 4.0658, 3.3299,2.2420, 4.7289, 3.0958, 3.6751, 2.8407, 3.1321, 3.2273, 3.2817, 3.1183,4.7729, 2.4687, 3.9887, 3.2121, 3.3692, 4.4454, 2.0416, 3.2838, 2.4493,3.2332, 2.6941, 2.8899,3.6909, 2.9464, 4.2653, 3.4000, 3.5033, 4.0303, 3.0530, 3.9095, 3.1500,2.7789, 4.1474, 3.1669, 4.6818, 2.9477, 3.1338, 3.3835, 4.0840, 3.2041,3.7881, 3.0700, 3.6797, 3.1445, 2.7966, 4.3961, 2.9716, 3.7935, 2.7089,4.3525, 3.1275, 4.1353,4.0345, 3.2660, 4.8752, 4.0029, 4.4314, 4.4057, 3.6272, 4.3223, 3.7407,2.7630, 4.7433, 3.5008, 5.1896, 4.0478, 3.7381, 4.0676, 4.5877, 3.6471,4.1847, 3.3612, 4.2813, 3.3358, 3.5423, 4.5272, 3.7827, 3.7183, 2.8070,5.0039, 3.6727, 4.7028,3.9481, 4.0942, 4.4427, 3.9016, 4.1105, 4.1882, 3.5198, 4.5735, 3.9209,2.5495, 4.3042, 3.7985, 4.7659, 3.2888, 3.6872, 3.6952, 4.2989, 3.9361,4.5267, 3.3778, 4.5590, 3.5023, 3.3430, 4.9373, 2.9573, 3.6218, 2.9784,4.4297, 3.4421, 3.8030,3.8083, 3.3273, 5.2421, 4.7401, 3.6663, 4.2655, 3.7888, 4.7480, 3.3081,3.4486, 4.3634, 2.9437, 4.9145, 3.5340, 3.7395, 3.9761, 4.3335, 3.7939,4.0506, 3.2171, 4.4928, 4.2854, 3.5874, 4.6632, 3.8977, 4.4439, 3.1947,5.2227, 4.2101, 4.8575,3.9727, 3.1376, 5.2920, 4.0441, 3.9181, 4.4155, 3.9895, 4.4587, 3.7059,2.8479, 4.3880, 3.1515, 4.7398, 3.8698, 3.6285, 3.7745, 4.4941, 3.8445,3.7895, 2.3053, 4.6607, 3.9292, 2.9048, 4.1102, 3.7406, 3.7772, 3.2206,5.0435, 4.1330, 3.8449,3.5119, 2.5546, 3.3664, 2.7585, 3.4431, 3.6206, 2.8535, 3.7926, 3.0554,2.7677, 4.1557, 2.7293, 3.8646, 3.0201, 3.4764, 3.9600, 2.8370, 3.0809,4.5088, 2.7100, 3.3883, 2.4063, 3.1332, 3.7055, 2.8562, 3.4373, 2.0090, 3.5721, 2.8235, 3.6451});
    
    EXPECT_TRUE(debug(t1.matmul(t2), expected_result, 1e-3));
}

TEST(TensorTest, BrodcastAdd)
{
    Tensor t1 ({10, 10, 10}, {5.4954e-01,6.5569e-01,9.6291e-01,1.9804e-01,7.9147e-01,8.6710e-01,7.4459e-01,3.3680e-01,1.4299e-01,5.7182e-01,8.0764e-01,5.0432e-01,7.3698e-02,6.7434e-02,9.3338e-01,5.3556e-01,2.2841e-01,1.2632e-02,4.1958e-01,8.9884e-01,7.5112e-01,3.3085e-01,4.1875e-01,8.7912e-01,1.7365e-01,1.2898e-01,3.4952e-01,1.0667e-02,8.3478e-01,4.9055e-01,8.1932e-01,8.2056e-01,1.4579e-01,9.1070e-01,7.9900e-01,4.1374e-01,8.5376e-01,4.8447e-01,3.8002e-01,2.4767e-01,6.0629e-01,9.1011e-02,8.1762e-01,5.7724e-01,4.5114e-01,3.1724e-02,4.3010e-02,3.0659e-01,2.7932e-01,7.5182e-01,8.7454e-01,9.4293e-01,5.5767e-01,3.0141e-01,3.3009e-01,2.3410e-01,1.4514e-01,5.3078e-01,4.0231e-01,1.2900e-01,9.1626e-01,1.1230e-01,4.5263e-01,7.8277e-02,4.4304e-01,6.5912e-01,2.7993e-01,6.0512e-01,6.5385e-01,8.7636e-01,9.0401e-01,7.6653e-01,4.5120e-01,3.0690e-01,7.4612e-01,9.3283e-01,4.3963e-01,6.4822e-02,4.9223e-01,6.1313e-01,4.0732e-01,8.7370e-01,9.7490e-01,9.1642e-01,9.4849e-01,4.3494e-01,7.6502e-01,3.0504e-01,5.8915e-01,2.5400e-01,6.3095e-01,8.2831e-01,6.1485e-01,9.7860e-01,3.0399e-01,7.3940e-01,9.3843e-01,2.6750e-01,7.4772e-01,1.9217e-01,1.2197e-01,3.6934e-01,1.4735e-01,4.6415e-01,1.9448e-01,3.9469e-01,5.3900e-01,4.8109e-01,1.4743e-01,5.7054e-01,7.5382e-01,6.2201e-01,1.2668e-01,1.8571e-01,1.9022e-01,9.1054e-01,4.5378e-01,5.4368e-01,7.8965e-01,5.6013e-01,7.5730e-01,1.0343e-02,4.1467e-01,3.6445e-01,6.4937e-02,6.6041e-01,5.9011e-01,5.7164e-01,7.0838e-01,3.2098e-01,5.4516e-01,9.9574e-01,9.1714e-01,2.0924e-01,6.6769e-01,5.6406e-01,3.4587e-01,5.7972e-01,6.8296e-01,3.7672e-01,1.7508e-01,9.7173e-01,2.2522e-01,2.1166e-01,6.7017e-01,9.0748e-04,6.9733e-02,6.9542e-01,1.9405e-01,3.3310e-01,1.7295e-01,8.9702e-01,8.1226e-01,4.5032e-01,4.9871e-01,3.9913e-02,6.6410e-01,4.6445e-01,5.8456e-01,4.9898e-01,3.8213e-01,1.9401e-01,7.2839e-02,9.5643e-02,1.6207e-01,3.5964e-01,3.6951e-01,7.3668e-01,7.7382e-01,8.1747e-01,1.8879e-01,1.4350e-01,5.8926e-01,2.6246e-01,7.9586e-01,2.4979e-02,8.9308e-01,6.9675e-01,4.1982e-01,2.6279e-01,9.5479e-01,6.2965e-01,5.3079e-01,7.1334e-01,9.3572e-01,7.5446e-01,5.0903e-02,5.6114e-01,8.0553e-01,8.3213e-01,5.7661e-01,3.6385e-01,3.0151e-01,7.4475e-01,2.5760e-01,8.8984e-01,7.9247e-02,3.3840e-01,4.1635e-01,6.5739e-01,3.0412e-01,4.2952e-01,8.7937e-02,1.1870e-02,7.5151e-01,7.6477e-02,8.8159e-01,3.0744e-01,6.4167e-01,8.3730e-01,4.5598e-01,5.1299e-01,6.3764e-01,3.7411e-01,4.8001e-01,4.6143e-01,5.4203e-01,6.2390e-02,9.6293e-01,4.5502e-01,2.6372e-01,3.4125e-01,9.8137e-01,7.9439e-01,2.6995e-01,8.1577e-02,1.9555e-01,5.4695e-01,6.5055e-01,7.7003e-01,3.8556e-02,5.5144e-02,9.3254e-02,4.2595e-01,5.0717e-01,9.0128e-01,5.7872e-01,7.4204e-01,7.4941e-01,7.8748e-01,3.3925e-01,5.4006e-02,2.7139e-01,9.3526e-02,2.9063e-01,7.1616e-01,2.4559e-01,8.5393e-01,3.8660e-01,1.2618e-01,1.3954e-01,4.5452e-01,5.6704e-01,4.8087e-03,3.7797e-01,1.1346e-02,1.9665e-01,3.9771e-01,3.1132e-01,5.3358e-02,6.9888e-01,6.0659e-01,4.3856e-02,1.4515e-01,1.7324e-01,3.0019e-01,6.8492e-01,1.5435e-01,9.3886e-01,8.8055e-01,2.4019e-01,2.1789e-01,2.5280e-01,5.2125e-01,4.2935e-01,8.7452e-01,8.5648e-01,3.0050e-01,3.0401e-01,1.6569e-01,2.1474e-01,9.5703e-01,1.0462e-01,1.6589e-01,2.6906e-01,1.9566e-01,4.8735e-01,4.5834e-01,8.2450e-01,9.5903e-01,4.1317e-01,9.6513e-01,6.4881e-01,1.4310e-01,2.7714e-01,2.1067e-01,2.2262e-01,3.8499e-02,4.2225e-03,4.1769e-01,3.9649e-01,2.8000e-03,3.4634e-01,2.4050e-01,9.1355e-01,1.5003e-01,7.3310e-01,7.2497e-01,3.2759e-01,6.6968e-02,7.2804e-01,5.7722e-01,3.1931e-03,6.5554e-01,6.5642e-01,7.1447e-02,4.8911e-01,5.9072e-01,7.2555e-01,7.8016e-01,4.6854e-01,1.2496e-01,4.7078e-02,4.9117e-01,3.1515e-01,9.1910e-04,7.9195e-01,4.9421e-01,2.4745e-01,2.5101e-01,6.4373e-01,9.8528e-01,8.8472e-01,3.2638e-01,7.9807e-01,4.6287e-01,2.2746e-01,6.2434e-01,3.8326e-01,9.1298e-01,4.3914e-01,2.5665e-01,8.6965e-01,4.6487e-03,7.2698e-01,1.8879e-01,6.3052e-02,1.6399e-02,4.2727e-01,4.3532e-01,5.3668e-02,1.1853e-01,9.7851e-01,2.3116e-01,6.2570e-01,9.4505e-01,9.6690e-01,9.4614e-01,7.2014e-01,1.4850e-01,3.6014e-01,1.9155e-01,7.6565e-01,8.6667e-01,7.3226e-01,2.1209e-01,8.7426e-01,2.5573e-01,6.5171e-01,4.1245e-01,5.2388e-01,1.2455e-03,6.9585e-01,6.8294e-01,2.7048e-01,1.3179e-01,6.9557e-01,2.5053e-01,3.4770e-01,3.7918e-01,9.1341e-01,9.6810e-01,5.9292e-01,8.1706e-01,9.8908e-01,1.3691e-01,6.7338e-01,6.5296e-03,3.4613e-01,1.7827e-01,2.4434e-01,1.5084e-01,2.3751e-01,6.6391e-01,3.5891e-01,6.8400e-01,6.3157e-02,2.1976e-01,2.1692e-01,4.6133e-01,1.0830e-01,8.2546e-03,2.5336e-01,7.4937e-01,7.4222e-01,4.0948e-01,8.6806e-02,4.4271e-01,9.7941e-01,2.5078e-01,2.1134e-01,5.3647e-01,4.9282e-01,8.1265e-01,5.9040e-01,1.5529e-01,3.6282e-01,5.0837e-01,8.6966e-01,8.8443e-01,3.0946e-01,4.4595e-01,6.5021e-01,2.5872e-01,4.9563e-01,7.2609e-03,6.1741e-01,1.4684e-01,3.3754e-01,4.9966e-02,6.7586e-01,7.1946e-01,9.7776e-01,4.5559e-01,3.6928e-01,2.5652e-01,5.3421e-01,9.2179e-01,5.5700e-02,3.9857e-01,4.3437e-01,1.2049e-01,6.4155e-01,1.4533e-01,1.2706e-01,2.9842e-01,4.0807e-01,2.6922e-01,1.4254e-02,1.5562e-01,5.5397e-01,9.1967e-01,5.7784e-01,9.6131e-01,9.4331e-01,1.1943e-01,3.3194e-01,6.4493e-01,3.7529e-01,1.8602e-01,1.4166e-01,9.1247e-01,6.0891e-01,9.9238e-01,8.9685e-01,1.4524e-01,1.1090e-01,8.4517e-02,1.8983e-01,9.3898e-01,1.9454e-01,2.1427e-01,6.9246e-01,6.7519e-01,4.3602e-01,4.5172e-01,6.3539e-01,2.5532e-01,1.9116e-02,4.2983e-01,3.3519e-01,9.7935e-01,8.9414e-01,5.7862e-01,7.0861e-01,7.6295e-01,3.3105e-01,2.9734e-01,8.5841e-01,3.1242e-01,2.9587e-01,9.1794e-01,5.1801e-01,6.7015e-02,3.6481e-01,9.6556e-01,1.0271e-01,6.6454e-01,7.1052e-01,6.0157e-01,8.5277e-01,4.6008e-01,8.3618e-01,9.6303e-01,9.5514e-01,4.7117e-01,3.8965e-01,9.2752e-01,3.3934e-01,5.9889e-01,9.9920e-01,5.8658e-01,1.8110e-01,2.7018e-01,2.5192e-01,7.4479e-01,9.6994e-01,7.6747e-01,7.2014e-01,4.9756e-01,2.2537e-01,8.7322e-01,1.3413e-01,6.0859e-01,7.3260e-01,8.5429e-01,2.0993e-01,8.1951e-01,3.1714e-01,1.2710e-01,9.7414e-01,7.1285e-01,9.3300e-01,4.2646e-01,2.5746e-01,1.7470e-01,6.8621e-01,5.4776e-01,8.1384e-01,2.7456e-01,2.1215e-01,7.4935e-01,8.1051e-01,8.7223e-03,8.5426e-01,8.7259e-01,7.8753e-01,6.9057e-01,2.2778e-01,2.5625e-01,9.5798e-01,9.6273e-01,3.4095e-01,7.7396e-01,7.7712e-01,2.0643e-01,3.3740e-01,4.2371e-01,8.6586e-01,7.3177e-01,8.6926e-02,8.6247e-02,7.1828e-01,8.1886e-01,8.2071e-01,6.0878e-02,1.9698e-01,3.1899e-01,4.2747e-01,5.1312e-01,9.3578e-01,6.9360e-01,7.0001e-01,6.2258e-01,6.0916e-01,3.5533e-01,3.8732e-01,6.7569e-01,4.6841e-01,7.0175e-01,9.6839e-01,3.3617e-01,7.3256e-01,7.5446e-01,3.1775e-01,2.2066e-01,3.7805e-01,7.8613e-01,9.8979e-01,5.1123e-01,7.4649e-01,9.7041e-02,6.4552e-01,8.8286e-01,4.6777e-01,2.9237e-01,4.7694e-01,6.3678e-01,1.0434e-01,4.9804e-01,4.3125e-01,5.1619e-01,2.2869e-01,5.4163e-01,4.9946e-01,6.1695e-01,6.4427e-01,9.6661e-01,8.0661e-02,2.8921e-01,4.8337e-02,5.8990e-01,9.7503e-01,1.4346e-02,9.0957e-01,9.2844e-01,2.3418e-01,1.0951e-01,7.0231e-01,8.4525e-03,7.2226e-01,8.2424e-01,3.7064e-01,3.3551e-04,7.1878e-01,4.8190e-01,8.7376e-01,9.2083e-01,9.9544e-01,2.2861e-01,6.7824e-01,9.7849e-01,2.4085e-01,4.6346e-01,6.9451e-01,8.3671e-01,2.8629e-01,4.8572e-04,8.0384e-01,1.2660e-01,3.9076e-01,5.7132e-01,6.8155e-01,9.0526e-01,5.7942e-01,6.1670e-01,7.2177e-01,1.7221e-01,5.8098e-01,6.8594e-01,7.5240e-01,2.9677e-01,9.0899e-01,6.1100e-02,4.9381e-01,5.8200e-01,9.0487e-01,5.8715e-01,8.9913e-01,3.4781e-01,3.8410e-01,6.4395e-01,9.4165e-01,6.2891e-01,4.6449e-01,9.3958e-01,9.5834e-01,5.1204e-01,8.9349e-01,2.5861e-01,3.3517e-02,2.9119e-01,1.7773e-01,6.4627e-01,6.5970e-01,5.1402e-02,1.8444e-01,2.8458e-01,8.0856e-01,8.3714e-01,6.4408e-01,1.3155e-01,5.6418e-01,7.1128e-01,3.9915e-01,9.5008e-01,5.0197e-01,3.2204e-02,3.3046e-01,9.4032e-01,8.3216e-01,1.7832e-01,9.8583e-01,4.2148e-01,5.4839e-01,4.7346e-01,3.3368e-01,1.5892e-01,3.9257e-02,8.8415e-01,8.4479e-01,2.7455e-01,7.9053e-01,6.1473e-01,3.7329e-01,6.9675e-01,5.6295e-01,2.1681e-01,9.1328e-02,8.4040e-01,6.0984e-01,5.2763e-01,1.3345e-01,6.9137e-01,8.5665e-01,8.0718e-01,8.5634e-01,1.5478e-01,8.2615e-01,2.9972e-01,5.1468e-01,9.8568e-01,9.2302e-01,5.2644e-01,6.1416e-01,5.0200e-01,6.3047e-01,9.5737e-01,7.5375e-02,4.3295e-01,7.3680e-01,7.6862e-01,2.2194e-01,3.9241e-01,4.5098e-01,3.8678e-01,3.3462e-01,1.6034e-01,4.8354e-01,7.6997e-01,8.5546e-01,4.4096e-02,7.9231e-01,1.7423e-02,2.1182e-01,8.7028e-01,5.1650e-03,8.6852e-01,3.1015e-01,9.5323e-01,8.9631e-01,6.6860e-01,5.3530e-01,3.4390e-01,6.0669e-01,2.1197e-01,3.1489e-01,5.6257e-01,6.2736e-01,3.9947e-01,4.3206e-01,3.1478e-01,4.5039e-01,5.9412e-01,7.6297e-03,6.3157e-01,2.4626e-02,2.6709e-01,6.0890e-01,4.4819e-02,7.0043e-01,9.6325e-01,4.5911e-01,3.4001e-01,8.5550e-01,6.7276e-01,2.6241e-01,1.6282e-01,1.7311e-01,7.9350e-01,5.1265e-01,4.2054e-01,8.4974e-01,6.7063e-01,4.2329e-01,4.7239e-01,9.8018e-01,9.5836e-01,9.4087e-01,2.7441e-01,4.0790e-01,3.2149e-01,8.5428e-01,5.2100e-01,3.1543e-01,3.5675e-01,6.7245e-02,6.1778e-01,9.4462e-01,8.4836e-01,4.4420e-01,5.0709e-01,7.1172e-01,8.8852e-01,8.8126e-01,6.7351e-01,1.1975e-01,5.9532e-01,9.2197e-01,9.9494e-01,3.2035e-01,6.4434e-01,1.0026e-01,3.3510e-01,2.3533e-02,7.4242e-01,7.5451e-01,3.8711e-01,4.4677e-01,1.6699e-02,9.1977e-01,5.0845e-01,2.1171e-01,4.3270e-01,5.2944e-01,4.4124e-01,3.1273e-01,8.6352e-01,5.1871e-01,9.6196e-01,4.7469e-01,2.9236e-01,4.5452e-01,1.5439e-01,5.7569e-01,1.9346e-01,4.5267e-01,3.8190e-01,7.0504e-01,7.5272e-01,5.3409e-01,4.2610e-01,2.7867e-01,1.7932e-01,7.9897e-01,7.6001e-02,9.2047e-01,1.0906e-01,9.9796e-01,6.1773e-01,6.0749e-01,8.2630e-01,2.5677e-01,2.5907e-01,1.2758e-01,8.2581e-01,8.9768e-01,9.2430e-01,2.2866e-01,4.9271e-02,7.4174e-03,6.1299e-01,3.1986e-01,4.1231e-01,2.7837e-01,9.2885e-01,7.2066e-01,5.6600e-01,2.9841e-01,1.8309e-01,2.5611e-01,5.4826e-01,1.5747e-01,1.8614e-01,1.2187e-01,9.4150e-01,6.4999e-01,7.7602e-01,5.4391e-01,2.8871e-01,9.8404e-01,9.4775e-01,8.7552e-01,1.2286e-01,8.5343e-01,4.3196e-01,7.9709e-01,7.1045e-01,6.1139e-01,4.3025e-01,7.8715e-01,9.0078e-01,2.3637e-01,4.5870e-01,3.5762e-01,4.9656e-01,4.9387e-01,1.5092e-01,3.1616e-01,6.4437e-01,3.9290e-01,9.5304e-01,1.2923e-01,4.6827e-02,4.0862e-01,5.6436e-02,8.5552e-01,4.3643e-01,9.3993e-01,6.3827e-01,8.5462e-01,6.3974e-02,4.5965e-01,2.3335e-01,3.9238e-01,7.6493e-01,3.3782e-01,2.3710e-01,2.0720e-01,2.7255e-01,1.0670e-01,7.5288e-01,8.7951e-01,2.1998e-01,5.8223e-01,1.6025e-01,1.0188e-01,9.5193e-01,4.7660e-01,9.9994e-01,7.5213e-01,8.6532e-01,5.4170e-02,1.9280e-02,5.9933e-02,6.7435e-03,6.9501e-01,1.8950e-01,3.6190e-01,2.7812e-01,9.5105e-01,6.5654e-01,4.7283e-01,5.3372e-01,3.5784e-01,9.8630e-01,6.4401e-01,1.3196e-01,4.4270e-01,9.3791e-01,7.3542e-01,9.5696e-02,3.9757e-01,3.9372e-01,4.8235e-01,2.4911e-01,9.5081e-01,8.7398e-01,3.2949e-01,7.9924e-01,6.2753e-01,7.2633e-01,1.9444e-01,6.8281e-02,3.1909e-01,4.5465e-01,3.8428e-01,2.3155e-01,8.4519e-01,1.3589e-01,1.2014e-01,2.8949e-02,3.2603e-01,6.7214e-01,2.7638e-01,8.5717e-01,7.5881e-01,7.7174e-01,5.3508e-01,3.5612e-01,2.9054e-01,8.0669e-01,2.7131e-01,8.7048e-02,9.8534e-01,4.4842e-02,2.5936e-01,1.1747e-02,8.4254e-01,8.1063e-01,1.9990e-01,9.0192e-01,3.7179e-01,1.2249e-01,8.6014e-01,2.6102e-01,7.0913e-01,3.3238e-01,7.8385e-01,8.5514e-01});
    Tensor t2 ({10, 1, 10}, {0.6540,0.6673,0.4959,0.9985,0.3763,0.7458,0.4000,0.8845,0.5872,0.2623,0.7198,0.0494,0.2089,0.8606,0.8736,0.6600,0.4061,0.4353,0.2038,0.7634,0.6396,0.5667,0.6812,0.7509,0.0366,0.6731,0.9706,0.5162,0.8911,0.8640,0.3972,0.4991,0.9981,0.9843,0.9987,0.0440,0.9201,0.6063,0.0978,0.8141,0.0969,0.3884,0.5095,0.4293,0.5600,0.1150,0.9425,0.2138,0.1195,0.4542,0.6699,0.2242,0.9163,0.2918,0.8157,0.1725,0.7849,0.8567,0.2821,0.0651,0.4371,0.6072,0.9675,0.8092,0.1628,0.0670,0.9023,0.4326,0.9341,0.2320,0.4909,0.1731,0.1120,0.4901,0.6623,0.4919,0.1270,0.3431,0.8027,0.6608,0.2646,0.6108,0.4099,0.4464,0.7218,0.4707,0.1948,0.7729,0.7846,0.8914,0.8876,0.5580,0.2207,0.6544,0.2132,0.7789,0.1790,0.5507,0.6441,0.7140});
    Tensor expected_result({10, 10, 10}, {1.2035,1.3230,1.4588,1.1965,1.1678,1.6129,1.1445,1.2213,0.7301,0.8341,1.4617,1.1716,0.5696,1.0659,1.3097,1.2814,0.6284,0.8972,1.0067,1.1611,1.4051,0.9981,0.9146,1.8776,0.5500,0.8748,0.7495,0.8952,1.4219,0.7528,1.4733,1.4878,0.6417,1.9092,1.1753,1.1596,1.2537,1.3690,0.9672,0.5100,1.2603,0.7583,1.3135,1.5757,0.8274,0.7776,0.4430,1.1911,0.8665,1.0141,1.5286,1.6102,1.0535,1.2999,0.7064,0.9799,0.5451,1.4153,0.9895,0.3913,1.5703,0.7796,0.9485,1.0767,0.8193,1.4050,0.6799,1.4897,1.2410,1.1387,1.5580,1.4338,0.9471,1.3054,1.1224,1.6787,0.8396,0.9494,1.0794,0.8754,1.0613,1.5410,1.4708,1.9149,1.3248,1.1808,1.1650,1.1896,1.1763,0.5163,1.2850,1.4956,1.1107,1.9771,0.6803,1.4852,1.3384,1.1520,1.3349,0.4545,0.8418,0.4188,0.3562,1.3247,1.0681,1.0547,0.9451,0.9164,0.3512,1.3339,1.4736,0.6714,0.3356,1.0463,1.0639,1.5706,0.8599,0.9789,0.9934,1.3235,1.4771,0.0598,0.6236,1.2250,0.9386,1.3204,0.9962,1.0069,0.9122,1.0843,1.2650,1.0452,1.1260,1.0698,1.5413,1.2241,0.7520,1.0150,0.8867,1.1401,0.8949,1.0212,0.4341,1.0722,1.5438,0.6609,0.4758,1.1307,0.3978,1.0965,0.8928,0.9465,1.0212,1.3109,1.3724,0.6999,1.0702,0.8997,0.7883,1.2623,1.1020,0.2435,0.2817,0.9562,1.0357,1.0197,0.7756,1.1719,0.9776,1.5808,0.9086,0.1929,0.7982,1.1230,1.6695,0.6850,1.2992,1.1320,0.6236,1.0261,1.6746,0.6791,0.7397,1.5739,1.8094,1.4145,0.4570,0.9964,1.0093,1.5955,1.2964,0.4133,0.5104,1.6053,1.1312,1.5499,0.4853,0.7737,0.6201,1.4207,0.9437,0.9962,0.7692,0.7628,0.7881,0.7495,1.8522,0.8236,1.5328,1.7013,1.0956,1.0796,1.3189,1.1251,0.5166,1.1345,1.5126,0.5786,1.8541,1.3191,0.9033,0.9079,1.6626,1.5453,0.3066,0.7546,1.1662,1.0631,1.5417,1.6341,0.6782,0.6218,0.7745,1.1769,0.5438,1.5743,1.5493,1.2582,1.6405,1.6515,0.9788,0.6207,0.9526,0.8445,0.3272,1.3892,1.2162,1.3701,1.2777,0.9902,0.7791,1.0212,1.2483,0.7557,0.4146,0.6844,1.1673,0.9139,1.2025,0.9174,1.3385,1.1732,0.7251,0.8961,0.2098,0.9733,1.6555,0.6705,1.8300,1.7446,0.8798,0.7846,0.9340,1.2722,0.4660,1.5476,1.8271,0.8167,1.1951,1.0297,0.8543,1.5237,0.7859,0.9168,0.3057,0.8687,1.4580,0.9745,1.7156,1.8231,1.0528,1.5318,1.3300,0.8940,0.3137,0.8837,1.1932,0.5547,0.8954,1.2817,0.7937,0.5019,1.3445,1.2248,1.9123,0.1941,1.6532,1.3313,0.4254,0.8811,1.1252,1.0763,1.0013,1.6398,1.6551,0.1155,1.4092,1.1970,0.8233,1.5943,0.8657,0.6240,1.0452,1.4754,1.3139,0.0450,1.7121,1.1005,0.3452,1.0652,1.0409,1.4844,1.8829,1.3106,1.7968,0.5069,1.1476,1.2306,0.4810,1.7271,0.8363,0.7557,1.8678,0.9889,1.7257,0.2328,0.9832,0.6227,0.5250,1.2495,0.4508,0.6176,1.9766,1.2154,1.6244,0.9891,1.8870,1.5524,0.8179,0.9626,0.7573,0.6906,1.7638,1.8509,1.7310,0.2561,1.7944,0.8620,0.7495,1.2266,0.9211,0.5003,1.6940,1.6672,1.2692,0.1758,1.6157,0.8568,0.4455,1.1933,1.3106,1.4672,1.5911,1.8013,1.9878,0.1810,1.5935,0.6128,0.4439,0.9924,0.6415,0.6499,1.2356,1.6482,1.3576,0.7280,0.9833,0.8261,0.3147,1.2755,0.2052,0.3967,0.7629,1.1787,1.3022,0.5245,1.0293,0.6565,1.0990,0.7050,0.3083,0.9249,1.0023,1.2420,1.1504,0.2703,1.3053,0.7222,0.9892,1.3387,0.4064,0.8344,1.1597,0.6880,1.0556,0.1223,1.5599,0.3606,0.4571,0.5042,0.7728,1.1079,1.4873,0.8849,0.9293,0.3715,1.4767,1.1356,0.1752,0.8528,0.5313,0.5089,1.1511,0.5746,0.6871,0.4134,1.3506,0.4830,0.1338,0.6098,0.6509,1.3081,1.0874,1.3906,1.5033,0.2344,1.2744,0.8587,0.4948,0.6402,0.2386,1.3009,1.1184,1.4217,1.4569,0.2602,1.0534,0.2983,0.3094,1.3932,0.2915,0.6027,1.2020,1.1045,0.9960,0.5667,1.5779,0.4691,0.1387,0.8841,0.4321,1.3678,1.4037,1.0079,1.2686,0.8779,1.2736,0.5111,0.9780,0.7666,0.3928,1.3063,1.0275,0.4963,0.9248,1.0806,1.0452,0.8783,0.8301,1.0558,1.5226,0.6843,1.7525,1.2548,1.7709,0.6436,1.1746,1.7842,0.6215,0.6640,1.6691,0.8108,1.0974,0.5620,1.0677,0.9173,1.7549,1.6242,1.0023,0.5626,0.8952,1.0974,1.0505,0.9004,1.5483,1.0268,0.9948,1.6762,0.5993,0.1922,1.6440,0.9370,1.8493,0.7182,1.0732,0.3472,1.4711,1.4045,1.0960,0.3396,0.8820,0.9735,1.7268,0.3005,1.6700,1.0451,1.5724,1.5473,0.5099,0.3213,1.6278,1.1869,1.2573,1.0657,1.5929,0.3789,1.1223,1.2804,1.1480,0.7969,0.7568,0.3104,1.6346,1.1106,1.6365,0.2333,0.9819,1.1757,0.7096,0.5782,1.6057,0.9178,1.6163,0.9144,1.4249,0.5278,1.1722,1.5324,0.7506,0.7668,1.6383,0.5604,1.6489,1.0462,1.1335,0.3931,1.1630,1.6428,1.2719,0.5763,1.4164,0.3212,1.5619,1.1746,1.2835,0.4648,1.2619,1.4935,0.3865,0.5631,0.8683,1.1234,1.1962,1.3508,0.6623,0.6840,1.5466,1.3992,1.0148,0.5212,0.4854,1.1971,1.9425,0.8235,1.0724,0.9955,1.1365,0.5421,1.6365,0.2405,1.1593,1.4315,1.3381,0.8095,0.8816,0.5489,1.7761,1.3534,1.9296,0.4606,1.1153,1.5857,1.2084,1.2726,0.8573,0.9037,1.1886,0.4331,1.7380,0.3586,0.8278,1.1785,1.6491,1.7144,0.7422,0.6837,1.6241,0.6048,1.5151,0.9180,1.1894,0.9040,1.8765,0.8703,0.6566,0.6490,1.8072,1.0197,1.8333,0.5798,0.8212,1.2512,1.9092,1.4381,0.6273,1.0066,1.8606,0.9446,1.8276,0.4906,0.4706,0.8984,1.1452,1.4554,0.8225,0.1184,1.0867,0.7172,1.7427,1.0692,1.0811,0.7388,1.5317,1.5204,0.5619,1.0171,1.4043,0.4648,1.2646,1.1723,1.2692,0.7855,1.9533,1.2306,0.7112,0.5405,1.2360,0.5915,0.9734,1.1162,1.3357,0.4477,0.9025,1.1049,1.0356,1.1886,0.6899,0.5599,0.8940,1.5013,1.1007,0.7008,0.2454,1.1815,1.5190,1.2991,0.9833,0.4979,1.6288,0.9606,1.0056,1.1588,1.0350,1.0166,1.2765,0.9939,0.7574,1.3005,0.8780,1.0938,1.2277,0.9418,0.3339,0.8825,1.1133,0.8787,0.4616,0.5035,1.2862,1.4308,1.3464,0.2172,0.9043,0.5075,0.8741,1.3622,0.1321,1.2116,1.1128,1.6141,1.3872,0.8417,0.6473,0.8340,1.2690,0.7039,0.4419,0.9057,1.4300,1.0603,0.9229,0.4879,0.5624,1.0842,0.6699,1.1235,0.1516,0.6102,1.4116,0.7057,1.1913,1.1364,0.5711,0.8301,1.5178,1.1646,0.3894,0.5059,0.9758,1.4543,1.0035,0.5937,0.9617,1.1607,1.0856,0.9643,1.1072,1.3015,1.7435,0.9353,0.8988,0.4946,0.9663,1.0111,0.9778,0.8486,0.1942,0.9609,1.7473,1.5092,0.7088,1.1179,1.1217,1.3350,1.6030,1.1442,0.3145,1.3682,1.7066,1.8864,0.5850,1.2552,0.5102,0.7815,0.7453,1.2131,0.9493,1.1600,1.2314,0.9081,1.1844,1.1193,0.6216,0.8791,1.2512,0.9119,0.5075,1.6364,1.3033,1.8534,0.7393,0.9032,0.8645,0.6008,1.2975,0.6641,0.6475,1.1548,1.4896,1.6442,0.7987,1.0369,0.6886,0.6257,1.5208,0.5467,1.1152,0.8819,1.7825,1.5092,0.8721,1.4371,0.6667,0.7055,0.8494,1.2965,1.0925,1.6972,1.0133,0.9407,0.2720,1.2238,0.7298,0.8587,1.0002,1.3995,0.9154,1.3389,1.0830,1.0745,0.5207,1.1591,0.5674,0.6326,0.8437,1.4122,0.8448,1.5489,1.3285,1.1802,1.2487,1.5586,1.2855,0.5693,1.5752,0.9026,0.9919,1.4833,1.3960,1.3217,1.0518,1.5116,0.6463,0.9051,1.0794,0.9672,0.6886,0.9238,1.1008,1.5358,1.2805,1.5110,0.3500,0.7012,0.6218,0.8354,1.0345,0.9872,1.5840,1.3522,1.7422,0.6219,0.6804,0.8877,0.6056,1.5438,0.5168,0.7878,0.8513,0.9865,0.9943,1.3109,1.1002,0.8743,0.7954,0.9392,0.2808,1.5027,1.1207,1.7139,1.6397,1.4233,0.2749,0.6736,0.2731,0.7857,0.8740,0.7402,1.0059,0.9921,1.8386,1.2145,0.6936,1.1881,0.5710,1.7652,0.8230,0.6827,1.0868,1.6519,1.6230,0.6537,0.6183,1.0481,0.6955,1.0280,1.1298,1.4247,0.9735,1.5132,1.5151,1.2843,0.4152,0.7226,0.5323,1.2336,0.5632,0.7823,1.4892,0.8499,1.0077,0.5869,0.5468,1.3265,0.4896,1.6361,0.9378,1.3225,1.1791,1.0701,1.1781,1.3647,0.4920,0.7414,1.1985,0.8238,0.4383,0.5625,1.4866,1.5246,1.0875,1.4599,0.5925,0.7769,1.0733,1.0399,0.8881,0.8831,1.4279,1.5691});

    EXPECT_TRUE(debug(t1 + t2, expected_result, 1e-3));
}

TEST(TensorTest, crossCorrelation1D)
{
    Tensor input ({1, 1, 100}, {  0.2986,  0.2573,  1.9187,  0.8268,  1.1147,  0.5820, -3.1277, 0.1396, -0.1591, -0.0988,  2.2881,  0.9068,  0.1755,  1.0051, 1.1302, -0.2918,  0.7597,  0.5783,  0.6462,  1.3712, -0.3961, 0.2396,  0.0937,  1.7267, -0.3601, -1.4971, -1.9791,  0.2377, 0.7225,  2.2996, -0.0061,  0.2711,  0.6034, -0.1207,  0.9510,-0.8527,  2.3257,  0.5180, -0.2260, -0.4104,  0.8924,  0.3301,-0.2527, -0.7397,  0.3064,  2.6306, -0.3250, -0.9504, -0.8857,-0.5319,  0.5915,  1.0189,  0.6348, -0.6112, -1.4981, -0.1984,-0.1969, -1.8594, -0.4756, -0.2325,  2.6431, -1.8866, -0.4012,-0.1368, -0.7778, -1.5014, -0.2260,  0.1223, -0.6979,  1.0412,-1.6566, -0.9424,  0.8966,  1.1292, -1.2966, -1.7269,  0.4638, 0.8161,  0.7462, -0.9467, -0.3383,  0.9797,  0.4366, -0.8404,-1.7910,  0.7343,  0.6587,  0.1348,  1.5052,  0.7311, -1.2299,-0.5902,  0.8088,  0.8087,  0.5765,  0.8528,  0.6392,  0.7708, 0.1292,  0.3391 });
    Tensor kernel ({1, 1, 5}, {-1.0341, 0.5722, 0.6266, 0.7307, -1.0320});
    Tensor expected_result ({1, 1, 96}, {0.4946,  1.5638,  2.8405, -2.2821, -2.5134, -2.3183,  0.7810, 0.4389,  2.0233,  1.0707, -2.1692,  0.9197,  0.1046, -0.6172,-1.1039,  0.1560,  1.3610,  0.0942, -0.0534, -3.2079,  2.2388, 2.1696,  1.6139, -4.6212, -2.2963, -1.2806,  4.3220,  1.3245, 0.1403, -1.6461, -0.5300,  1.5643, -3.1203,  1.2994,  0.5978, 2.7955, -3.4709, -0.6107,  1.0601,  1.7206, -1.7489, -3.4403, 2.2876,  3.3320,  1.2043, -3.6000, -1.7618, -0.4766,  1.0716, 2.6216,  1.4686, -1.9634, -1.8867,  1.4255,  0.4443, -1.1802,-4.0559,  5.3833,  1.0505,  0.4186, -3.3614,  2.6167, -1.0148,-1.5357,  0.6132, -0.0846,  2.3367, -0.1114, -1.3345, -3.1253, 3.8989,  3.0298, -2.8341, -3.4950,  0.4696,  4.0848,  0.1123,-2.2685, -1.2600,  2.5856,  2.4182, -3.3565, -2.1978,  0.6466, 1.2301,  0.0474,  2.1428,  0.8904, -3.1748, -2.0732,  1.4370, 1.1211, -0.0488, -0.3004,  0.7223, -0.2887});

    Tensor result = input.crossCorrelation1d(kernel);
    EXPECT_TRUE(debug(result, expected_result, 1e-3));
}

TEST(TensorTest, crossCorrelation2D)
{
    Tensor input({1, 1, 20, 20}, {34,68,48,88,27,39,61,67,58,7,71,24,35,37,59,8,59,34,3,37,60,57,6,97,48,99,95,6,37,78,77,5,99,18,1,14,19,66,74,84,20,18,41,5,68,90,38,71,32,46,8,12,97,42,94,62,48,73,88,43,74,16,86,27,1,64,48,93,66,77,28,31,14,15,29,98,71,40,54,97,15,6,39,48,58,87,68,25,41,91,53,75,53,41,91,59,34,84,13,90,29,46,83,68,41,0,64,12,43,41,30,64,13,19,4,8,26,38,93,33,62,97,39,24,10,61,63,56,57,50,96,27,16,51,72,65,2,15,65,95,40,25,76,23,0,72,31,16,20,47,29,94,66,4,15,5,52,11,87,18,55,52,41,38,35,1,30,28,56,18,86,59,36,65,44,16,32,9,11,52,57,54,42,13,90,10,31,83,66,80,50,42,50,29,61,12,63,94,84,57,87,86,11,66,26,82,42,78,45,81,5,42,32,89,33,56,75,53,77,52,13,95,94,70,86,66,0,61,98,19,81,74,20,37,89,66,96,35,80,5,38,46,89,35,53,48,97,92,96,22,42,93,41,28,79,76,60,0,39,57,87,34,94,22,36,48,39,67,33,91,74,52,17,62,17,50,83,62,40,51,80,38,74,49,59,15,0,52,0,50,61,78,16,81,59,9,37,37,66,85,13,37,9,77,83,97,2,4,62,21,59,44,43,2,84,23,88,24,5,58,47,23,75,96,27,94,67,84,49,97,10,18,88,89,71,35,89,80,58,90,49,97,83,67,69,48,44,50,76,61,73,79,90,8,47,40,51,34,99,38,98,51,30,8,74,79,39,42,88,92,82,58,46,46,3,11,61,45,68,60,41,77,38,63,43,27,54,32,92,21,1,61,9,30,95,19,44,5,65,42});
    Tensor kernel({1, 1, 4, 4}, {82,96,96,96,77,94,19,61,22,21,85,44,31,86,32,57});
    Tensor expected_result({1, 1, 17, 17}, {50865,44435,54666,55632,55531,63049,54072,47784,40706,45485,39774,38943,45014,38457,44855,44455,50998,40023,41532,51837,63294,64304,60076,55184,50204,47947,52544,39418,45221,47115,46232,52279,50058,62999,35537,42970,52450,47486,51344,51759,52048,49184,43788,43470,38386,43299,50958,45097,54147,62147,56198,48371,38872,43617,40331,52857,57793,59070,54465,53612,49095,35357,36618,40311,47437,53644,48420,59983,37345,43029,48622,50857,44557,45348,45285,43661,58625,49660,47908,48671,39591,37388,35291,42414,46526,55919,46855,37479,37366,30353,37758,39654,45609,46473,52428,46016,31615,27458,28509,29463,35299,41114,44676,42075,35313,33068,40379,46770,49523,50619,57961,49376,46929,49513,38689,37753,31777,39850,44843,48141,36610,43617,33529,38616,41226,43236,44913,49342,49474,52311,43620,38726,36012,36152,47436,47410,51272,56099,40136,43488,43171,41193,47991,60131,52800,51488,52181,51848,41673,53296,45947,46742,48723,57484,55863,50792,46952,54631,61784,66580,60487,59869,48545,44958,47747,50990,57059,57638,60888,59342,59559,59749,55088,52308,62849,58787,58191,57986,55780,48822,50326,46728,51249,62457,56837,61523,55364,59501,66245,60051,48947,49438,52245,52767,62945,62584,47196,54302,53718,47182,61421,57680,57819,48288,51725,53099,56690,46582,54318,53535,50472,54977,56408,53987,48694,51098,44408,53773,45928,47364,49425,52184,54766,60165,47111,46923,38824,52192,49440,54118,50024,51630,46886,48083,56388,51949,49979,56302,59815,58460,56677,52490,49545,41712,36025,50815,47895,53175,55807,60021,40756,49394,46421,49330,56114,47894,52793,66155,59891,55202,54340,52462,55068,60371,57789,45836,45445,46624,50825,48437,49337,59813,59862,57457,64015,60915,55102,62074,62662,62303,55367,51542,51016,58170,46650,51833,49562,55799,57483});

    Tensor result = input.crossCorrelation2d(kernel);
    EXPECT_TRUE(debug(result, expected_result, 1e-4));
}

int main(int argc, char** argv)
{
    ::testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}